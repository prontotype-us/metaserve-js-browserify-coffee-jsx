// Generated by CoffeeScript 1.9.1
(function() {
  var BrowserifyCoffeeJSXCompiler, BrowserifyCompiler, browserify, coffee_reactify, fs,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  fs = require('fs');

  browserify = require('browserify');

  coffee_reactify = require('coffee-reactify');

  BrowserifyCompiler = require('metaserve-js-browserify').BrowserifyCompiler;

  require('node-cjsx').transform();

  BrowserifyCoffeeJSXCompiler = (function(superClass) {
    extend(BrowserifyCoffeeJSXCompiler, superClass);

    function BrowserifyCoffeeJSXCompiler() {
      return BrowserifyCoffeeJSXCompiler.__super__.constructor.apply(this, arguments);
    }

    BrowserifyCoffeeJSXCompiler.prototype.default_options = {
      ext: 'coffee',
      browserify: {
        extensions: ['.coffee']
      },
      browserify_shim: false,
      uglify: false
    };

    BrowserifyCoffeeJSXCompiler.prototype.beforeBundle = function(bundler) {
      bundler = bundler.transform(coffee_reactify);
      if (this.options.browserify_shim) {
        bundler = bundler.transform(require('browserify-shim'));
      }
      if (this.options.uglify) {
        bundler = bundler.transform({
          global: true
        }, 'uglifyify');
      }
      return bundler;
    };

    return BrowserifyCoffeeJSXCompiler;

  })(BrowserifyCompiler);

  module.exports = function(options) {
    if (options == null) {
      options = {};
    }
    return new BrowserifyCoffeeJSXCompiler(options);
  };

}).call(this);
